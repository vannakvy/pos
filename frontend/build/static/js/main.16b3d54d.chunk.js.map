{"version":3,"sources":["fn/fn.js","context/headerContext.js","component/menu/tableColumn/orderColumn.js","assets/red-onion.jpg","component/menuItem/MenuItem.js","component/product/modal/AddProduct.js","component/salelist/tableColumn/salelistColumn.js","component/salelist/SaleList.js","component/order/tableColumn/orderlistColumn.js","component/order/modal/EditOrder.js","component/order/OrderList.js","component/print/printInvoice.js","component/purchase/tableColumn/purchaseColumn.js","component/purchase/create/createPurchase.js","component/purchase/get/getPurchase.js","component/purchase/delete/deletePurchase.js","component/purchase/update/updatePurchase.js","component/purchase/Purchase.js","component/stock/tableColumn/stockColumn.js","component/stock/get/getStock.js","component/stock/Stock.js","fn/own-comp.js","component/product/modal/EditProduct.js","component/stock/create/AdjustItem.js","component/stock/modal/AdjustStock.js","component/menu/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["currencyFormat","num","toFixed","replace","numberWithCommas","x","Math","floor","toString","rielAsOne","API_LINK","Button","Group","orderColumn","handleRemoveOrder","handleEditQty","handlePlusQty","handleMinusQty","title","dataIndex","key","width","render","text","record","i","size","type","min","onChange","e","newValue","target","value","qty","price","fixed","align","onConfirm","_id","okText","cancelText","style","cursor","className","color","DeleteOutlined","MenuItem","item","handleClick","xs","sm","md","padding","height","onClick","disabled","inStock","position","TagOutlined","fontSize","textAlign","name","toUpperCase","Option","Select","AddProduct","open","setOpen","setSuccess","axios","require","Form","useForm","form","addProduct","a","post","resetFields","message","error","visible","onOk","onCancel","footer","onFinish","values","onFinishFailed","errorInfo","console","log","span","Item","rules","required","placeholder","offset","htmlType","SaleList","useState","saleList","setSaleList","loading","setLoading","getSaleList","get","data","useEffect","columns","totalSaleAmount","dataSource","pagination","orderlistColumn","handleEdit","handleDeliver","handlePrintInvoice","handleCancel","moment","createdAt","format","orderItems","length","totalPrice","badge","isDelivered","isPaid","isCancel","CarFilled","EditFilled","PrinterFilled","StopFilled","EditOrder","editOrder","put","OrderList","orderList","setOrderList","success","editData","setEditData","getOrder","updateDelivery","cancelOrder","info","PrintInvoice","this","props","printData","border","invoiceID","colSpan","backgroundColor","client","shippingAddress","clientTel","map","index","marginTop","paymentMethod","discount","Component","purchaseColumn","handleDelete","parseZone","purchaseDate","purchasePrice","purchaseShippingPrice","supplier","remark","DeleteFilled","createPurchase","d","getPurchaseList","keyword","pageNumber","limit","setData","deletePurchase","id","delete","editPurchase","Purchase","productData","purchaseData","setPurchaseData","setPageNumber","setLimit","isEdit","setIsEdit","selectedProduct","setSelectedProduct","handleSelectProduct","findIndex","ed","product","category","productName","parseFloat","purchaseQty","parseInt","trim","supplierName","tel","supplierTel","address","supplierAddress","setFieldsValue","purchases","total","paginator","totalDocs","pageSize","page","scroll","sticky","getStock","Column","Table","ColumnGroup","Stock","stockData","setStockData","totalPurchaseAmount","totalSaleQty","ListSelect","setValue","getNew","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","filterSort","optionA","optionB","localeCompare","load","EditProduct","productList","editProduct","active","undefined","adJustStock","AdjustStock","actualStock","newStock","Card","Meta","MenuPage","openPrint","setOpenPrint","componentRef","useRef","setPrintData","itemData","setItemData","saleShow","setSaleShow","dashboardData","setDashboardData","openAddProduct","setOpenAddProduct","openEditProduct","setOpenEditProduct","openAdjustStock","setOpenAdjustStock","orderData","setOrderData","menuData","setMenuData","totalOrderPrice","setTotalOrderPrice","getProduct","getDashBoard","handleAddOrder","newOrder","slice","generateTotal","addOrder","totalSale","totalSaleToday","menu","PlusCircleOutlined","EditOutlined","InboxOutlined","trigger","content","current","ref","margin","totalProduct","ImportOutlined","taxPrice","warning","warn","splice","searchItem","filter","includes","handleSearchItem","overlay","maxHeight","overflowY","App","Helmet","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16b3d54d.chunk.js","sourcesContent":["export function currencyFormat(num) {\r\n    return '$' + num?.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n }\r\n\r\n export function numberWithCommas(x) {\r\n    x = Math.floor(x)\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","export const rielAsOne = 4000\r\nexport const API_LINK = \"\";","import React from 'react'\r\nimport {Space,Popconfirm,Button,Input,Form} from 'antd'\r\nimport {DeleteOutlined  } from '@ant-design/icons'\r\nimport { currencyFormat, numberWithCommas } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function orderColumn({handleRemoveOrder,handlePlusQty,handleMinusQty,handleEditQty}) {\r\n    // let [form] = Form.useForm()\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Item',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'qty',\r\n            key: 'qty',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                   \r\n                    {/* <ButtonGroup>\r\n                        <Button onClick={()=> handleMinusQty(record)} disabled={record.qty ===1}>\r\n                        -\r\n                        </Button>\r\n                        <div style={{padding:5,borderWidth:1}}> {record.qty} </div>\r\n                        <Button onClick={()=> handlePlusQty(record)}>\r\n                        +\r\n                        </Button>\r\n                    </ButtonGroup> */}\r\n\r\n                            <Input type=\"number\" min={0} onChange={(e)=> handleEditQty({...record,newValue:e.target.value})} value={record.qty} />\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n            key: 'amount',\r\n            width: 150,\r\n            render: (text, record) => {\r\n            \r\n            return (\r\n                <span size=\"middle\">\r\n                    {/* {currencyFormat(record.qty * record.price)} */}\r\n                    {numberWithCommas((record?.qty * record?.price) * rielAsOne )}&#6107;\r\n                </span>\r\n            )\r\n            }\r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link> */}\r\n                    <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleRemoveOrder(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","export default __webpack_public_path__ + \"static/media/red-onion.ce03a861.jpg\";","import React from 'react'\r\nimport {Col,Button,Image, Divider} from 'antd'\r\nimport { currencyFormat, numberWithCommas } from '../../fn/fn'\r\nimport { rielAsOne } from '../../context/headerContext'\r\nimport {TagOutlined  } from '@ant-design/icons'\r\n\r\nexport default function MenuItem({item, handleClick}) {\r\n    return (\r\n        <Col xs={24} sm={8} md={6} style={{padding:10}}>\r\n            <Button style={{width:'100%',height:'100%'}} onClick={()=> handleClick(item)} disabled={item.inStock<=0}>\r\n                <div style={{position:'relative'}}>\r\n                    {/* <Image src={item.image} preview={false} width={\"100px\"} /> */}\r\n                    <TagOutlined  style={{fontSize:100,color:'#CCCCCC'}} />\r\n                    <div className=\"price-tag\"><span style={{fontSize:14}}>{numberWithCommas(item.price * rielAsOne)}&#6107;</span><br/>{currencyFormat(item.price)}</div>\r\n                </div>\r\n                                        \r\n                <span style={{textAlign:'center'}}>{item.name?.toUpperCase()}</span>\r\n                <br/>\r\n                <span style={{textAlign:'center'}}>{item.inStock > 0 ?\"Stock: \"+ item.inStock.toString()?.toUpperCase():\"Not available\"}</span>\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message, InputNumber} from 'antd';\r\nimport { API_LINK } from '../../../context/headerContext';\r\nconst { Option } = Select;\r\n\r\nexport default function AddProduct({open,setOpen,setSuccess}) {\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const addProduct =async (e) =>{\r\n        try{\r\n            await axios.post(API_LINK+'/api/product', e)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            form.resetFields()\r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        addProduct(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"CREATE NEW PRODUCT\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addProduct\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"category\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"category\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"VEGETABLE\">VEGETABLE</Option>\r\n                                <Option value=\"MEAT\">MEAT</Option>\r\n                                <Option value=\"FRUIT\">FRUIT</Option>\r\n                                <Option value=\"CAKE\">CAKE</Option>\r\n                                <Option value=\"EGG\">EGG</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"inStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"price\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber min={0} placeholder=\"price $\"  style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            CREATE\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteOutlined  } from '@ant-design/icons'\r\nimport { currencyFormat, numberWithCommas } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function salelistColumn() {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Total QTY',\r\n            dataIndex: 'totalQty',\r\n            key: 'totalQty',\r\n            width: 100,\r\n            \r\n        },\r\n\r\n       \r\n        {\r\n            title: 'Total Sale',\r\n            dataIndex: 'totalSaleAmount',\r\n            key: 'totalSaleAmount',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    USD: {currencyFormat(record?.totalSaleAmount)}, KHRIEL: {numberWithCommas(record?.totalSaleAmount * rielAsOne)} &#6107;\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            // render: (text, record) => (\r\n            //     <Space size=\"middle\">\r\n            //         {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link> */}\r\n            //         <Popconfirm\r\n            //             title=\"Do you want to remove this item?\"\r\n            //             onConfirm={() => handleRemoveOrder(record._id)}\r\n            //             okText=\"Yes\"\r\n            //             cancelText=\"No\"\r\n            //             style={{cursor:'pointer'}}\r\n            //         >\r\n            //             <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n            //         </Popconfirm>\r\n\r\n            //     </Space>\r\n            // ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form} from 'antd'\r\nimport salelistColumn from './tableColumn/salelistColumn'\r\n\r\nexport default function SaleList() {\r\n    const axios = require('axios');\r\n\r\n    const [saleList,setSaleList] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n\r\n    const [loading,setLoading]= useState(true)\r\n\r\n    const getSaleList = async()=>{\r\n        try{\r\n            let {data} = await axios.get('api/dashboard/salelist')\r\n            \r\n            setSaleList(data)\r\n            setLoading(false)\r\n        }catch(error){\r\n            message.error(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getSaleList()\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Table \r\n                columns={salelistColumn()} \r\n                dataSource={saleList} \r\n                pagination={false}\r\n                loading={loading}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteOutlined, EditFilled ,CarFilled,PrinterFilled,StopFilled } from '@ant-design/icons'\r\nimport moment from 'moment'\r\nimport { currencyFormat, numberWithCommas } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function orderlistColumn({handleEdit,handleDeliver,handlePrintInvoice,handleCancel}) {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: '#Invoice',\r\n            dataIndex: 'invoiceID',\r\n            key: 'invoiceID',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n            width: 150,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record.createdAt).format(\"DD-MMM-YYYY hh:mm:ss a\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: 'product',\r\n            key: 'product',\r\n            width: 100,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {record?.orderItems?.length}\r\n                </Space>\r\n            ),\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Discount',\r\n            dataIndex: 'discount',\r\n            key: 'discount',\r\n            width: 150,\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Tax',\r\n            dataIndex: 'taxPrice',\r\n            key: 'taxPrice',\r\n            width: 150,\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Total Price',\r\n            dataIndex: 'totalPrice',\r\n            key: 'totalPrice',\r\n            width: 100,\r\n            render: (text, record, i) => (\r\n                <span size=\"middle\">\r\n                    {/* {currencyFormat(record?.totalPrice)} */}\r\n                    {numberWithCommas(record?.totalPrice * rielAsOne)}&#6107;\r\n                </span>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'Payment',\r\n            dataIndex: 'isPaid',\r\n            key: 'isPaid',\r\n            width: 100,\r\n            render: (text, record, i) => {\r\n\r\n                let badge = <span className=\"status-pending\">Pending</span>\r\n\r\n                if(record?.isDelivered===true){\r\n                    badge=<span className=\"status-delivered\">Delivered</span>\r\n                }\r\n\r\n                if(record?.isPaid===true){\r\n                    badge=<span className=\"status-paid\">Paid</span>\r\n                }\r\n\r\n                if(record?.isCancel===true){\r\n                    badge=<span className=\"status-cancel\">Cancel</span>\r\n                }\r\n\r\n                return (\r\n                <Space size=\"middle\" style={{width:'100%'}}>\r\n                    {badge}\r\n                </Space>\r\n            )},\r\n        },\r\n       \r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subCase/\" + record.id}><EditFilled /></Link> */}\r\n                    {/* <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleRemoveOrder(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></Button>\r\n                        \r\n                    </Popconfirm> */}\r\n                    <Popconfirm\r\n                        title=\"Are you sure to confirm delivery?\"\r\n                        onConfirm={() => handleDeliver(record)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                        disabled={record?.isCancel}\r\n                    >\r\n                        <Button className=\"link\" disabled={record?.isCancel} style={{color:'#1d39c4'}} ><CarFilled  /></Button>\r\n                    </Popconfirm>\r\n                    <Button className=\"link\" style={{color:'#ad8b00'}} onClick={()=> handleEdit(record)} disabled={record?.isCancel}><EditFilled /></Button>\r\n                    <Button className=\"link\" onClick={()=> handlePrintInvoice(record)} disabled={record?.isCancel}><PrinterFilled /></Button>\r\n\r\n                    <Popconfirm\r\n                        title=\"Are you sure to cancel this order?\"\r\n                        onConfirm={() => handleCancel(record)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                        disabled={record?.isCancel}\r\n                    >\r\n                        <Button className=\"link\" disabled={record?.isCancel} ><StopFilled /></Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import React from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nimport { API_LINK } from '../../../context/headerContext';\r\nconst { Option } = Select;\r\n\r\nexport default function EditOrder({open,setOpen,setSuccess,data}) {\r\n    console.log(data)\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const editOrder =async (e) =>{\r\n        try{\r\n            await axios.put(API_LINK+`/api/order/${data?._id}/pay`,e)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            form.resetFields()\r\n        }catch(error){\r\n            console.log(error.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        editOrder(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"INVOICE\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"EditInvoice\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"paymentMethod\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"payment method\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"CASH\">CASH</Option>\r\n                                <Option value=\"ABA\">ABA</Option>\r\n                                <Option value=\"ទូទាត់ផ្ទាល់\">ទូទាត់ផ្ទាល់</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"inStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"price\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input type=\"number\" min={0} placeholder=\"price\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            PAY\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form} from 'antd'\r\nimport orderlistColumn from './tableColumn/orderlistColumn'\r\nimport { useState } from 'react/cjs/react.development';\r\nimport EditOrder from './modal/EditOrder';\r\nimport { API_LINK } from '../../context/headerContext';\r\n\r\nexport default function OrderList({handlePrintInvoice}) {\r\n    const axios = require('axios');\r\n\r\n    const [orderList,setOrderList] =useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const getOrder = async()=>{\r\n        try{\r\n            let {data} = await axios.get(API_LINK+'api/order')\r\n            if(data){\r\n                setOrderList(data)\r\n                setLoading(false)\r\n            }\r\n           \r\n        }catch(error){\r\n            message.error(error)\r\n        }\r\n    }\r\n\r\n    const updateDelivery = async(e)=>{\r\n        try{\r\n            let {data} = await axios.put(API_LINK+`api/order/${e}/deliver`)\r\n            // console.log(data)\r\n            // setOrderList(data)\r\n            if(data.success===true){\r\n                setSuccess(true)\r\n                message.success(\"Order is delivered!\")\r\n            }else{\r\n                message.error(data.message)\r\n            }\r\n            \r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    const cancelOrder = async(e)=>{\r\n        try{\r\n            let {data} = await axios.put(API_LINK+`api/order/${e}/cancel`)\r\n            if(data.success===true){\r\n                setSuccess(true)\r\n                message.info(\"Order is cancel!\")\r\n            }else{\r\n                message.error(data.message)\r\n            }\r\n            \r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getOrder()\r\n        setSuccess(false)\r\n    },[success])\r\n\r\n    const handleEdit=(e)=>{\r\n        setEditData(e)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleDeliver=(e)=>{\r\n        updateDelivery(e._id)\r\n        \r\n    }\r\n\r\n    const handleCancel =(e)=>{\r\n        console.log(e)\r\n        cancelOrder(e._id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EditOrder open={open} setOpen={setOpen} setSuccess={setSuccess} data={editData} />\r\n            <Table \r\n                className=\"order-table\"\r\n                columns={orderlistColumn({handleEdit, handleDeliver,handlePrintInvoice,handleCancel})} \r\n                dataSource={orderList} \r\n                pagination={false}\r\n                loading={loading}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Col, Image, message, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport { rielAsOne } from \"../../context/headerContext\";\r\nimport { numberWithCommas } from \"../../fn/fn\";\r\n\r\nexport default class PrintInvoice extends Component {\r\n  // getPersonalInfoById={this.props.getPersonalInfoById}\r\n  // getHospitalizationByPersonalInfo={this.props.getHospitalizationByPersonalInfo}\r\n  // getPersonalInfoByCaseWithPagination={this.props.getPersonalInfoByCaseWithPagination}\r\n  // getHistoryLocationByPersonalInfoId={getHistoryLocationByPersonalInfoId}\r\n\r\n  render() {\r\n\r\n    console.log(this.props.printData)\r\n\r\n    const printData =this.props.printData\r\n\r\n    // const sampleTest = this.props.getPersonalInfoById?.sampleTest;\r\n\r\n    // let lengthQuaranting = this.props.getPersonalInfoById?.quaranting.length\r\n    // const quarantingData = this.props.getPersonalInfoById?.quaranting[lengthQuaranting-1];\r\n\r\n    // console.log(quarantingData)\r\n\r\n    // let positiveTest = {};\r\n\r\n    // let index = sampleTest.findIndex((e) => e.result === true);\r\n    // positiveTest = { ...positiveTest, ...sampleTest[index] };\r\n\r\n    // let num= 0\r\n    // let num1= 0\r\n\r\n    // let family = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"គ្រួសារ\")\r\n    // let work = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"អ្នករួមការងារ\")\r\n    // let worker = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"ពលករ\")\r\n    // let quaranting = this.props.affectedData?.personalInfos.filter(e => e.affectedFrom.relationType === \"អ្នករួមចត្តាឡីស័ក\")\r\n\r\n    // // console.log(this.props.getPersonalInfoById)\r\n    // let lengthVaccination = this.props.getPersonalInfoById?.vaccination?.length\r\n    // let vaccination = this.props.getPersonalInfoById?.vaccination\r\n    return (\r\n        <div\r\n            style={{\r\n            padding: 20,\r\n           \r\n            }}\r\n            className=\"invoice-print\"\r\n        >\r\n            <table className=\"invoice-print\" style={{width:'100%'}}>\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td style={{textAlign:'center',fontSize:12}}><b>វិក្កយបត្រ</b> </td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td style={{textAlign:'right'}}>កាលបរិច្ឆេទ</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}>{moment(printData?.createdAt).format(\"DD-MMM-YYYY\")}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>ភូមិថ្មី សង្កាត់ស្វាយដង្គំ ក្រុងសៀមរាប ខេត្តសៀមរាប</td>\r\n                    <td style={{textAlign:'right'}}>លេខវិក្កយបត្រ</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}>{printData?.invoiceID}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>លេខទូរស័ព្ទៈ 085 332 047</td>\r\n                    <td style={{textAlign:'right'}}>លេខកូដអតិថិជន</td>\r\n                    <td style={{textAlign:'center',border:'0.5px solid #CCCC'}}></td>\r\n                </tr>\r\n                <tr>\r\n                    {/* <td></td> */}\r\n                    <td colSpan=\"2\" style={{backgroundColor:'#000000',textAlign:'center',width:'60%',color:'#FFFFFF',fontSize:10}}><b>ព័ត៌មានអតិថិជន</b></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{width:'15%'}}>ឈ្មោះ</td>\r\n                    <td>៖ {printData?.client}</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>ក្រុមហ៊ុន</td>\r\n                    <td>៖</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>អាសយដ្ឋាន</td>\r\n                    <td>៖ {printData?.shippingAddress}</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>លេខទូរស័ព្ទ</td>\r\n                    <td>៖ {printData?.clientTel}</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n            </table>\r\n            <table className=\"invoice-print description-order\" style={{width:'100%'}}>\r\n                <tr style={{backgroundColor:'#AAA',color:'#FFF'}}>\r\n                    <th style={{textAlign:'left',fontSize:10}}>ល.រ</th>\r\n                    <th style={{textAlign:'center',width:'40%',fontSize:10}}>បរិយាយ</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>ចំនួន</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>តម្លៃរាយ</th>\r\n                    <th style={{textAlign:'center',fontSize:10}}>តម្លៃសរុប</th>\r\n                </tr>\r\n\r\n                {   \r\n                   \r\n                    printData?.orderItems?.map((e,index)=>{\r\n                        \r\n                        return(\r\n                            <tr>\r\n                                <td>{index+1}</td>\r\n                                <td >{e?.name}</td>\r\n                                <td style={{textAlign:'center',width:'10%'}}>{e?.qty}</td>\r\n                                <td style={{textAlign:'center'}}>{numberWithCommas(e?.price  * rielAsOne)} &#6107;</td>\r\n                                <td style={{textAlign:'right'}}>{ numberWithCommas((e?.price* e?.qty) * rielAsOne) } &#6107;</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                {/* <tr>\r\n                    <td ></td>\r\n                    <td style={{textAlign:'center',width:'10%'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr>\r\n                <tr >\r\n                    <td style={{borderBottom:'none'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr>\r\n                <tr>\r\n                    <td ></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                    <td style={{textAlign:'center'}}></td>\r\n                </tr> */}\r\n            </table>\r\n            <table className=\"invoice-print\" style={{width:'100%',marginTop:20}}>\r\n                <tr>\r\n                    <td style={{width:'50%'}}>ចំណាំ៖ {printData?.paymentMethod}</td>\r\n                    <td style={{textAlign:'center',width:'10%'}}></td>\r\n                    <td >សរុប</td>\r\n                    <td style={{textAlign:'right'}}>{numberWithCommas(printData?.totalPrice * rielAsOne)} &#6107;</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >បញ្ចុះតម្លៃ</td>\r\n                    <td style={{textAlign:'right'}}>{printData?.discount}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >សរុបចុងក្រោយ</td>\r\n                    <td style={{textAlign:'right'}}>{numberWithCommas(printData?.totalPrice * rielAsOne)} &#6107;</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td style={{backgroundColor:'#EEE'}}>លុយទទួលបាន</td>\r\n                    <td style={{textAlign:'right',backgroundColor:'#EEE'}}>0</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td ></td>\r\n                    <td ></td>\r\n                    <td >លុយអាប់</td>\r\n                    <td style={{textAlign:'right'}}>0</td>\r\n                </tr>\r\n                \r\n            </table>\r\n            <Row style={{marginTop:20,textAlign:'center'}}>\r\n                <Col xs={12}>\r\n                    អ្នកលក់\r\n                </Col>\r\n                <Col xs={12}>\r\n                    អ្នកដឹកជញ្ជូន\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row  style={{marginTop:70,textAlign:'center'}}>\r\n                <Col xs={24}>\r\n                {/* className=\"thanks-container\"  */}\r\n                    <div >\r\n                    <p>\r\n                        សូមអរគុណដែលបានទិញទំនិញពីហ្គោគ្លូប៊លម៉ាត‌‌!!<br/>\r\n                        Thank you!! Please come again\r\n                    </p>\r\n                    </div>\r\n                </Col>\r\n                \r\n            </Row>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteFilled ,EditFilled } from '@ant-design/icons'\r\nimport { currencyFormat, numberWithCommas } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\nimport moment from 'moment';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function purchaseColumn({handleEdit,handleDelete}) {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: 'productName',\r\n            key: 'productName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n            width:80,\r\n        },\r\n        \r\n        {\r\n            title: 'Purchase Date',\r\n            dataIndex: 'purchaseDate',\r\n            key: 'purchaseDate',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {moment.parseZone(record?.purchaseDate).format(\"DD-MMM-YYYY\")}\r\n                </span>\r\n            )\r\n            \r\n        },\r\n        {\r\n            title: 'QTY',\r\n            dataIndex: 'purchaseQty',\r\n            key: 'purchaseQty',\r\n            width: 40,\r\n        },\r\n       \r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'purchasePrice',\r\n            key: 'purchasePrice',\r\n            width: 130,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    USD: {currencyFormat(record?.purchasePrice)}, KHRIEL: {numberWithCommas( record?.purchasePrice * rielAsOne)} &#6107;\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Shipping',\r\n            dataIndex: 'purchaseShippingPrice',\r\n            key: 'purchaseShippingPrice',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {currencyFormat(record?.purchaseShippingPrice)}\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Supplier',\r\n            dataIndex: 'supplier',\r\n            key: 'supplier',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {record?.supplier?.name}\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Remark',\r\n            dataIndex: 'remark',\r\n            key: 'remark',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {record?.remark}\r\n                </span>\r\n            )\r\n            \r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button className=\"link\" style={{color:'#ad8b00'}} onClick={()=>handleEdit(record)}><EditFilled /></Button>\r\n                    <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleDelete(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteFilled /></Button>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import { message } from 'antd';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const createPurchase = async({data:d,setSuccess,form})=>{\r\n    try{\r\n        let {data} = await axios.post('api/purchase',d)\r\n        if(data.success===true){\r\n            setSuccess(true)\r\n            form.resetFields()\r\n            message.success(\"Product has been purchased!\")\r\n        }else{\r\n            message.error(data.message)\r\n        }\r\n        \r\n    }catch(error){\r\n        message.error(error.message)\r\n    }\r\n}","import { message } from 'antd';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const getPurchaseList = async({keyword,pageNumber,limit,setData,setLoading})=>{\r\n    try{\r\n        let {data} = await axios.get(`api/purchase?keyword=${keyword}&pageNumber=${pageNumber}&limit=${limit}`)\r\n        setData(data)\r\n        setLoading(false)\r\n        \r\n    }catch(error){\r\n        message.error(error)\r\n    }\r\n}","import { message } from 'antd';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const deletePurchase = async({id,setSuccess})=>{\r\n    try{\r\n        let {data} = await axios.delete(`api/purchase/${id}`)\r\n        if(data.success===true){\r\n            setSuccess(true)\r\n            message.info(\"Purchase has been deleted!\")\r\n        }else{\r\n            message.error(data.message)\r\n        }\r\n        \r\n    }catch(error){\r\n        message.error(error)\r\n    }\r\n}","import { message } from 'antd';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const editPurchase = async({editData,setSuccess})=>{\r\n    try{\r\n        let {data} = await axios.put(`api/purchase/${editData._id}`,editData)\r\n        if(data.success===true){\r\n            setSuccess(true)\r\n            message.success(\"Purchase has been updated!\")\r\n        }else{\r\n            message.error(data.message)\r\n        }\r\n        \r\n    }catch(error){\r\n        message.error(error)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form,Select,DatePicker} from 'antd'\r\nimport purchaseColumn from './tableColumn/purchaseColumn';\r\nimport moment from 'moment';\r\nimport { createPurchase } from './create/createPurchase';\r\nimport { getPurchaseList } from './get/getPurchase';\r\nimport { deletePurchase } from './delete/deletePurchase';\r\nimport { editPurchase } from './update/updatePurchase';\r\n\r\nconst {Option} = Select\r\n\r\nexport default function Purchase({productData}) {\r\n    let [form] = Form.useForm()\r\n    const axios = require('axios');\r\n\r\n    const [purchaseData,setPurchaseData] = useState({})\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n\r\n    const [loading ,setLoading]= useState(true)\r\n\r\n    const [keyword ,setKeyword] = useState(\"\")\r\n    const [pageNumber,setPageNumber] = useState(0)\r\n    const [limit,setLimit]= useState(15)\r\n\r\n    const [isEdit,setIsEdit] = useState(false)\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState({})\r\n\r\n    // const getPurchaseList = async()=>{\r\n    //     try{\r\n    //         let {data} = await axios.get('api/dashboard/salelist')\r\n    //         setPurchaseList(data)\r\n    //     }catch(error){\r\n    //         message.error(error)\r\n    //     }\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        let data = getPurchaseList({keyword,pageNumber,limit,setData:setPurchaseData,setLoading})\r\n        setSuccess(false)\r\n    },[success])\r\n\r\n    const onFinish = (values) => {\r\n        \r\n        let data = {...values,\r\n            product:selectedProduct._id,\r\n            category:selectedProduct.category,\r\n            productName:selectedProduct.name,\r\n            purchaseDate: moment(values.purchaseDate),\r\n            purchasePrice:parseFloat(values.purchasePrice),\r\n            purchaseQty: parseInt(values.purchaseQty),\r\n            purchaseShippingPrice: parseFloat(values.purchaseShippingPrice),\r\n            remark:values.remark.trim(),\r\n            supplier:{\r\n                name:values.supplierName.trim(),\r\n                tel:values.supplierTel.trim(),\r\n                address:values.supplierAddress.trim()\r\n            }\r\n        }\r\n\r\n        if(!isEdit){\r\n            createPurchase({data,setSuccess,form})\r\n            \r\n        }else{\r\n            editPurchase({editData:{...editData,...data},setSuccess})\r\n            form.resetFields()\r\n        }\r\n        setIsEdit(false)\r\n        // if(orderData.length > 0){\r\n        //     console.log({\r\n        //         ...values,\r\n        //         orderItems:orderData, \r\n        //         taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n        //         discount:values.discount > 0 ? values.discount :0,\r\n        //         totalPrice:total\r\n        //     })\r\n        //     addOrder(\r\n        //         {\r\n        //             ...values,\r\n        //             orderItems:orderData, \r\n        //             taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n        //             discount:values.discount > 0 ? values.discount :0,\r\n        //             totalPrice:total\r\n        //         }\r\n        //     );\r\n        // }else{\r\n        //     message.warning(\"No order!\")\r\n        // }\r\n\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleSelectProduct =(e)=>{\r\n        let index = productData.findIndex(ed=> ed._id===e)\r\n        setSelectedProduct(productData[index])\r\n    }\r\n\r\n    const handleEdit =(e)=>{   \r\n        setIsEdit(true)\r\n        setEditData(e)\r\n        handleSelectProduct(e.product)\r\n        form.setFieldsValue({\r\n            ...e,\r\n            purchaseDate:moment.parseZone(e?.purchaseDate),\r\n            supplierName:e?.supplier?.name,\r\n            supplierTel:e?.supplier?.tel,\r\n            supplierAddress:e?.supplier?.address\r\n        })\r\n    }\r\n\r\n    const handleDelete=(e)=>{\r\n        // let id = e\r\n        deletePurchase({id:e,setSuccess})\r\n    }\r\n\r\n    const handleCancel =()=>{\r\n        form.resetFields()\r\n        setIsEdit(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{backgroundColor:'#F7F9FC',padding:10}}>\r\n                <Col xs={24}>\r\n                <Form\r\n                    form={form}\r\n                    name=\"addOrder\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"product\"\r\n                                rules={[{ required: true, message: 'Fields is required!' }]}\r\n                            >\r\n                                <Select placeholder=\"product\" style={{ width: \"100%\" }} onChange={(e)=>handleSelectProduct(e)}>\r\n                                    {\r\n                                        productData?.map((e,index)=>(\r\n                                            <Option value={e._id}>{e.name}</Option>\r\n                                        ))\r\n                                    }\r\n                                \r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"purchaseDate\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <DatePicker style={{width:'100%'}} placeholder=\"purchase date\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"purchaseQty\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"qty\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"purchasePrice\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"price $\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"purchaseShippingPrice\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]} \r\n                            >\r\n                                <Input type=\"number\" placeholder=\"shipping $\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                       \r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"remark\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"remark\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"supplierName\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"supplier\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"supplierTel\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"supplier tel\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"supplierAddress\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"supplier address\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    style={{width:'100%'}}\r\n                                    // onClick={()=> setOpenAddProduct(true)}\r\n                                    htmlType=\"submit\"\r\n                                    className=\"btn-grad\"\r\n                                >\r\n                                    {!isEdit ? \"PURCHASE\":\"EDIT\"}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    // style={{backgroundColor:'#ff8b8c' ,color:'#FFFFFF'}}\r\n                                    onClick={()=> handleCancel()}\r\n                                    style={{width:'100%'}}\r\n                                    type=\"danger\"\r\n                                    // disabled={orderData?.length<=0}\r\n                                >\r\n                                    CANCEL\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Form>\r\n                </Col>\r\n                <Col xs={24}>\r\n                    <Table \r\n                        columns={purchaseColumn({handleEdit,handleDelete})} \r\n                        dataSource={purchaseData?.purchases} \r\n                        pagination={{\r\n                            total: purchaseData?.paginator?.totalDocs,\r\n                            //pageSizeOptions:[\"10\", \"20\"],\r\n                            // showSizeChanger: true,\r\n                            pageSize:limit,\r\n                            // current: purchaseData?.paginator?.currentPage,\r\n                            onChange: ((page, pageSize) => { setPageNumber(page); setLimit(pageSize) })\r\n                        }}\r\n                        scroll={{ x: 1100 }} \r\n                        sticky \r\n                        loading={loading}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Space,Popconfirm,Button} from 'antd'\r\nimport {DeleteFilled ,EditFilled } from '@ant-design/icons'\r\nimport { currencyFormat } from '../../../fn/fn';\r\nimport { rielAsOne } from '../../../context/headerContext';\r\nimport moment from 'moment';\r\n\r\nconst ButtonGroup = Button.Group;\r\n\r\nexport default function stockColumn({handleEdit,handleDelete}) {\r\n    var array = [\r\n        {\r\n            title: 'N°',\r\n            dataIndex: 'no',\r\n            key: 'no',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Product',\r\n            dataIndex: 'productName',\r\n            key: 'productName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Qty',\r\n            dataIndex: 'purchaseQty',\r\n            key: 'purchaseQty',\r\n            width:80,\r\n        },\r\n        \r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'purchaseAmount',\r\n            key: 'purchaseAmount',\r\n            width: 80,\r\n            // render: (text, record) => (\r\n            //     <span size=\"middle\">\r\n            //         {moment.parseZone(record?.purchaseDate).format(\"DD-MMM-YYYY\")}\r\n            //     </span>\r\n            // )\r\n            \r\n        },\r\n        {\r\n            title: 'QTY',\r\n            dataIndex: 'saleQty',\r\n            key: 'saleQty',\r\n            width: 40,\r\n        },\r\n\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'salePrice',\r\n            key: 'salePrice',\r\n            width: 40,\r\n        },\r\n       \r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'saleAmount',\r\n            key: 'saleAmount',\r\n            width: 130,\r\n            // render: (text, record) => (\r\n            //     <span size=\"middle\">\r\n            //         USD: {currencyFormat(record?.purchasePrice)}, KHRIEL: {record?.purchasePrice * rielAsOne} &#6107;\r\n            //     </span>\r\n            // )\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'QTY',\r\n            dataIndex: 'balanceQty',\r\n            key: 'balanceQty',\r\n            width: 80,\r\n            // render: (text, record) => (\r\n            //     <span size=\"middle\">\r\n            //         {currencyFormat(record?.purchaseShippingPrice)}\r\n            //     </span>\r\n            // )\r\n            \r\n        },\r\n\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'balanceQty',\r\n            key: 'balanceQty',\r\n            width: 80,\r\n            // render: (text, record) => (\r\n            //     <span size=\"middle\">\r\n            //         {record?.supplier?.name}\r\n            //     </span>\r\n            // )\r\n            \r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button className=\"link\" style={{color:'#ad8b00'}} onClick={()=>handleEdit(record)}><EditFilled /></Button>\r\n                    <Popconfirm\r\n                        title=\"Do you want to remove this item?\"\r\n                        onConfirm={() => handleDelete(record._id)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                        style={{cursor:'pointer'}}\r\n                    >\r\n                        <Button className=\"link\" style={{ color: \"red\" }}><DeleteFilled /></Button>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}\r\n","import { message } from 'antd';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const getStock = async({keyword,pageNumber,limit,setData,setLoading})=>{\r\n    try{\r\n        let {data} = await axios.get(`api/dashboard/stock`)\r\n        // if(data.success===true){\r\n        if(data){\r\n            setData(data)\r\n            setLoading(false)\r\n        }\r\n        // }\r\n        // else{\r\n        //     message.error(data.message)\r\n        // }\r\n        \r\n    }catch(error){\r\n        message.error(error)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form,Select,DatePicker} from 'antd'\r\nimport purchaseColumn from './tableColumn/stockColumn';\r\nimport moment from 'moment';\r\nimport { getPurchaseList } from '../purchase/get/getPurchase';\r\nimport { getStock } from './get/getStock';\r\nimport { numberWithCommas } from '../../fn/fn';\r\nimport { rielAsOne } from '../../context/headerContext';\r\n\r\nconst {Option} = Select\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nexport default function Stock({productData}) {\r\n    let [form] = Form.useForm()\r\n    const axios = require('axios');\r\n\r\n    const [stockData,setStockData] = useState([])\r\n    const [open,setOpen] = useState(false)\r\n    const [success,setSuccess] = useState(false)\r\n    const [editData,setEditData] = useState({})\r\n\r\n    const [keyword ,setKeyword] = useState(\"\")\r\n    const [pageNumber,setPageNumber] = useState(0)\r\n    const [limit,setLimit]= useState(15)\r\n\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const [isEdit,setIsEdit] = useState(false)\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState({})\r\n\r\n    // const getPurchaseList = async()=>{\r\n    //     try{\r\n    //         let {data} = await axios.get('api/dashboard/salelist')\r\n    //         setPurchaseList(data)\r\n    //     }catch(error){\r\n    //         message.error(error)\r\n    //     }\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        let data = getStock({keyword,pageNumber,limit,setData:setStockData,setLoading})\r\n        setSuccess(false)\r\n    },[success])\r\n\r\n    const onFinish = (values) => {\r\n\r\n        if(!isEdit){\r\n            \r\n        }else{\r\n            form.resetFields()\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleSelectProduct =(e)=>{\r\n        let index = productData.findIndex(ed=> ed._id===e)\r\n        setSelectedProduct(productData[index])\r\n    }\r\n\r\n    const handleEdit =(e)=>{   \r\n        setIsEdit(true)\r\n        setEditData(e)\r\n        handleSelectProduct(e.product)\r\n        form.setFieldsValue({\r\n            ...e,\r\n            purchaseDate:moment.parseZone(e?.purchaseDate),\r\n            supplierName:e?.supplier?.name,\r\n            supplierTel:e?.supplier?.tel,\r\n            supplierAddress:e?.supplier?.address\r\n        })\r\n    }\r\n\r\n    const handleDelete=(e)=>{\r\n        // let id = e\r\n        // deletePurchase({id:e,setSuccess})\r\n    }\r\n\r\n    const handleCancel =()=>{\r\n        form.resetFields()\r\n        setIsEdit(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{backgroundColor:'#F7F9FC',padding:10}}>\r\n                <Col xs={24}>\r\n                <Form\r\n                    form={form}\r\n                    name=\"addOrder\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"product\"\r\n                                // rules={[{ required: true, message: 'Fields is required!' }]}\r\n                            >\r\n                                <Select placeholder=\"product\" style={{ width: \"100%\" }} onChange={(e)=>handleSelectProduct(e)}>\r\n                                    {\r\n                                        productData?.map((e,index)=>(\r\n                                            <Option value={e._id} key={e._id}>{e.name}</Option>\r\n                                        ))\r\n                                    }\r\n                                \r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        \r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"date\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <DatePicker style={{width:'100%'}} placeholder=\"date\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    style={{width:'100%'}}\r\n                                    // onClick={()=> setOpenAddProduct(true)}\r\n                                    htmlType=\"submit\"\r\n                                    className=\"btn-grad\"\r\n                                >\r\n                                    SEARCH\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    // style={{backgroundColor:'#ff8b8c' ,color:'#FFFFFF'}}\r\n                                    onClick={()=> handleCancel()}\r\n                                    style={{width:'100%'}}\r\n                                    type=\"danger\"\r\n                                    // disabled={orderData?.length<=0}\r\n                                >\r\n                                    CANCEL\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Form>\r\n                </Col>\r\n                <Col xs={24}>\r\n                    <Table \r\n                        // columns={purchaseColumn({handleEdit,handleDelete})} \r\n                        loading={loading}\r\n                        dataSource={stockData} \r\n                        pagination={false}\r\n                        // pagination={{\r\n                        //     total: purchaseData,\r\n                        //     //pageSizeOptions:[\"10\", \"20\"],\r\n                        //     // showSizeChanger: true,\r\n                        //     pageSize:limit,\r\n                        //     // current: purchaseData?.paginator?.currentPage,\r\n                        //     onChange: ((page, pageSize) => { setPageNumber(page); setLimit(pageSize) })\r\n                        // }}\r\n                        scroll={{ x: 1100 }} \r\n                        sticky \r\n                    >\r\n                        <Column title=\"N°\" dataIndex=\"no\" key=\"no\" width={70} render={\r\n                            (text,record,i)=>(\r\n                                <span>\r\n                                    {i+1}\r\n                                </span>\r\n                            )\r\n                        }/>\r\n                        \r\n                        <Column title=\"Date\" dataIndex=\"purchaseDate\" key=\"purchaseDate\" />\r\n                        <Column title=\"Product\" dataIndex=\"productName\" key=\"productName\" />\r\n                        <ColumnGroup className=\"merge-header\" title={<b style={{ width:'100%',color:'#000000'}}>PURCHASE</b>} >\r\n                            \r\n                            <Column title=\"QTY\" dataIndex=\"purchaseQty\" key=\"purchaseQty\" />\r\n                            {/* <Column title=\"Price\" dataIndex=\"purchasePrice\" key=\"purchasePrice\" /> */}\r\n                            <Column title=\"Amount\" dataIndex=\"totalPurchaseAmount\" key=\"totalPurchaseAmount\" \r\n                            render={\r\n                                (text,record)=>(\r\n                                    <span>\r\n                                    {numberWithCommas(record?.totalPurchaseAmount * rielAsOne) } &#6107;\r\n                                    </span>\r\n                                )\r\n                            }  \r\n                            />\r\n                        </ColumnGroup>\r\n\r\n                        <ColumnGroup className=\"merge-header\" title={<b style={{ width:'100%',color:'#000000'}}>SALE</b>}>\r\n                            <Column title=\"QTY\" dataIndex=\"totalSaleQty\" key=\"totalSaleQty\" />\r\n                            {/* <Column title=\"Price\" dataIndex=\"unitPrice\" key=\"unitPrice\" /> */}\r\n                            <Column title=\"Amount\" dataIndex=\"totalSaleAmount\" key=\"totalSaleAmount\" \r\n                             render={\r\n                                (text,record)=>(\r\n                                    <span>\r\n                                    {numberWithCommas(record?.totalSaleAmount * rielAsOne) } &#6107;\r\n                                    </span>\r\n                                )\r\n                            }  \r\n                            />\r\n                        </ColumnGroup>\r\n\r\n                        <ColumnGroup className=\"merge-header\" title={<b style={{ width:'100%',color:'#000000'}}>BALANCE</b>}>\r\n                            <Column title=\"QTY\" dataIndex=\"balanceQty\" key=\"balanceQty\" \r\n                             render={\r\n                                (text,record)=>(\r\n                                    <span>\r\n                                    {record?.purchaseQty - record?.totalSaleQty}\r\n                                    </span>\r\n                                 )\r\n                            }  \r\n                            />\r\n                            {/* <Column title=\"Price\" dataIndex=\"balancePrice\" key=\"balancePrice\" /> */}\r\n                            <Column title=\"Amount\" dataIndex=\"balanceAmount\" key=\"saleAmount\"\r\n                            render={\r\n                                (text,record)=>(\r\n                                    <span>\r\n                                    { numberWithCommas((record?.totalPurchaseAmount - record?.totalSaleAmount)*rielAsOne)} &#6107;\r\n                                    </span>\r\n                                 )\r\n                            }  \r\n                            />\r\n                        </ColumnGroup>\r\n\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Select, Divider, Input, notification } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nexport function ListSelect({ type, data, title, value, setValue, id, disabled, getNew }) {\r\n    return(\r\n        <Select\r\n        showSearch\r\n        style={{ width: \"100%\" }}\r\n        placeholder={title}\r\n        value={value}\r\n        onChange={e => setValue(e)}\r\n        disabled={disabled}\r\n        optionFilterProp=\"children\"\r\n        filterOption={(input, option) =>\r\n            option.children.indexOf(input) >= 0\r\n        }\r\n        filterSort={(optionA, optionB) =>\r\n            optionA.children.localeCompare(optionB.children)\r\n        }\r\n    >\r\n        {data.map(load => {\r\n            return <Option value={load._id} key={load._id}>{load.name}</Option>\r\n        })}\r\n        </Select>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message, InputNumber} from 'antd';\r\nimport { API_LINK } from '../../../context/headerContext';\r\nimport { ListSelect } from '../../../fn/own-comp';\r\nconst { Option } = Select;\r\n\r\nexport default function EditProduct({open,setOpen,setSuccess,productList}) {\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState({})\r\n\r\n    const editProduct =async (e) =>{\r\n        try{\r\n            await axios.put(API_LINK+`/api/product/${e.product}`, e)\r\n            setSuccess(true)\r\n            setOpen(false)\r\n            form.resetFields()\r\n        }catch(error){\r\n            message.error(error.message)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        form.resetFields()\r\n        setSelectedProduct({})\r\n    },[open])\r\n\r\n    const onFinish = (values) => {\r\n        editProduct(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleSelectProduct =(e)=>{\r\n        let index = productList.findIndex(ed=> ed._id===e)\r\n        let product = productList[index]\r\n        setSelectedProduct(productList[index])\r\n        form.setFieldsValue({\r\n            product:e,\r\n            name:product.name,\r\n            category:product.category,\r\n            inStock:product.inStock,\r\n            price:product.price,\r\n            remark:product.remark,\r\n            active:product.active\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"EDIT PRODUCT\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addProduct\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{span:24}}>\r\n                            <Form.Item\r\n                                name=\"product\"\r\n                                rules={[{ required: true, message: 'Fields is required!' }]}\r\n                            >\r\n                             \r\n                                <ListSelect title=\"product\" data={productList} setValue={handleSelectProduct} />\r\n                            </Form.Item>\r\n                    </Col>\r\n\r\n                    { \r\n                    selectedProduct?._id!==undefined ? (\r\n                        <>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"category\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"category\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"VEGETABLE\">VEGETABLE</Option>\r\n                                <Option value=\"MEAT\">MEAT</Option>\r\n                                <Option value=\"FRUIT\">FRUIT</Option>\r\n                                <Option value=\"CAKE\">CAKE</Option>\r\n                                <Option value=\"EGG\">EGG</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"inStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"price\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber min={0} placeholder=\"price $\"  style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"active\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"status\">\r\n                                <Option value={true} key=\"ACTIVE\">ACTIVE</Option>\r\n                                <Option value={false} key=\"INACTIVE\">INACTIVE</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            EDIT\r\n                        </Button>\r\n                    </Col>\r\n                    </>):null}\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { message } from 'antd';\r\nimport { API_LINK } from '../../../context/headerContext';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const adJustStock =async ({data:d,setSuccess,form}) =>{\r\n\r\n    try{\r\n        await axios.post(API_LINK+`/api/product/${d?.product}/adjust`, d)\r\n        setSuccess(true)\r\n        form.resetFields()\r\n    }catch(error){\r\n        message.error(error.message+\" eee\")\r\n    }\r\n    \r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message, InputNumber} from 'antd';\r\nimport { API_LINK } from '../../../context/headerContext';\r\nimport { ListSelect } from '../../../fn/own-comp';\r\nimport { adJustStock } from '../create/AdjustItem';\r\nconst { Option } = Select;\r\n\r\nexport default function AdjustStock({open,setOpen,setSuccess,productList}) {\r\n    const axios = require('axios');\r\n    let [form] = Form.useForm()\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState({})\r\n\r\n    const onFinish = (values) => {\r\n        values = {...values,\r\n            actualStock:parseFloat(values.actualStock),\r\n            newStock:parseFloat(values.newStock),\r\n        }\r\n        adJustStock({data:values,setSuccess,form})\r\n        setOpen(false)\r\n    };\r\n\r\n    useEffect(()=>{\r\n        form.resetFields()\r\n        setSelectedProduct({})\r\n    },[open])\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleSelectProduct =(e)=>{\r\n        let index = productList.findIndex(ed=> ed._id===e)\r\n        let product = productList[index]\r\n        setSelectedProduct(productList[index])\r\n        form.setFieldsValue({\r\n            product:e,\r\n            actualStock:product.inStock,\r\n           \r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"STOCK ADJUSTMENT\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addProduct\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                                name=\"product\"\r\n                                rules={[{ required: true, message: 'Fields is required!' }]}\r\n                            >\r\n                             \r\n                                <ListSelect title=\"product\" data={productList} setValue={handleSelectProduct} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    { \r\n                    selectedProduct?._id!==undefined ? (\r\n                        <>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"actualStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber disabled min={0} placeholder=\"in stock\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"newStock\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <InputNumber min={0} placeholder=\"new Stock\"  style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"adjustStockType\"\r\n                            rules={[{ required: true, message: 'Fields is required!' }]}\r\n                        >\r\n                            <Select placeholder=\"type\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ដើមគ្រា</Option>\r\n                                <Option value={false}>Adjust</Option>\r\n                            \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }} >\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"remark\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            SAVE\r\n                        </Button>\r\n                    </Col>\r\n                    </>):null}\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {Row,Col,Button,Card,Table,Image,Input,message, Form, Modal,Menu,Dropdown} from 'antd'\r\nimport orderColumn from './tableColumn/orderColumn';\r\nimport RedOnion from '../../assets/red-onion.jpg'\r\nimport MenuItem from '../menuItem/MenuItem';\r\nimport { currencyFormat, numberWithCommas } from '../../fn/fn';\r\nimport {PlusCircleOutlined ,ImportOutlined,InboxOutlined ,EditOutlined,UserOutlined} from '@ant-design/icons'\r\nimport AddProduct from '../product/modal/AddProduct';\r\nimport SaleList from '../salelist/SaleList';\r\nimport OrderList from '../order/OrderList';\r\nimport PrintInvoice from '../print/printInvoice';\r\nimport ReactToPrint from 'react-to-print';\r\nimport { rielAsOne } from '../../context/headerContext';\r\nimport { API_LINK } from '../../context/headerContext';\r\nimport Purchase from '../purchase/Purchase';\r\nimport Stock from '../stock/Stock';\r\nimport EditProduct from '../product/modal/EditProduct';\r\nimport AdjustStock from '../stock/modal/AdjustStock';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function MenuPage() {\r\n    \r\n    let [form] = Form.useForm()\r\n\r\n    const [openPrint, setOpenPrint] = useState(false)\r\n    const componentRef = useRef()\r\n\r\n    const [printData,setPrintData] = useState({})\r\n\r\n    const [itemData,setItemData] = useState([])\r\n\r\n    const axios = require('axios');\r\n    const [success,setSuccess] = useState(false)\r\n\r\n    const [saleListShow,setSaleListShow] = useState(false)\r\n    const [saleShow,setSaleShow] = useState(\"\")\r\n    const [dashboardData,setDashboardData] = useState({})\r\n\r\n    const [openAddProduct,setOpenAddProduct] = useState(false)\r\n    const [openEditProduct,setOpenEditProduct] = useState(false)\r\n    const [openAdjustStock,setOpenAdjustStock] = useState(false)\r\n\r\n    const [orderData, setOrderData] = useState([])\r\n    const [menuData, setMenuData] = useState([])\r\n    const [totalOrderPrice, setTotalOrderPrice] = useState(0)\r\n\r\n    const getProduct = async()=>{\r\n        try{\r\n            let {data} = await axios.get(API_LINK+'api/product')\r\n            console.log(data,\"not set\")\r\n            if(data){\r\n                setMenuData(data)\r\n                setItemData(data)\r\n            }\r\n            \r\n        }catch(error){\r\n            console.log(\"error : \"+ error)\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProduct()\r\n        setSuccess(false)\r\n    }, [success,saleShow])\r\n\r\n    const handleSearchItem =(e)=>{\r\n        let searchItem = menuData.filter(record => record.name.toUpperCase().includes(e.toUpperCase()))\r\n        if(e){\r\n            setItemData(searchItem)\r\n        }else{\r\n            setItemData(menuData)\r\n        }\r\n    }\r\n\r\n    const getDashBoard = async()=>{\r\n        try{\r\n            let {data} = await axios.get(API_LINK+'api/dashboard')\r\n            if(data){\r\n                setDashboardData(data)\r\n            }\r\n        }catch(error){\r\n            console.log(\"error dash : \"+ error)\r\n            message.error(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDashBoard()\r\n        setSuccess(false)\r\n    }, [success])\r\n\r\n    const handleAddOrder =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let newOrder = [...orderData,{_id:e._id,name:e.name,qty:1,price:e.price,product:e._id}]\r\n\r\n        if(index> -1){\r\n            let editOrder = {...orderData[index],qty:orderData[index].qty+1}\r\n            // orderData.splice(index, 1,editOrder)\r\n            // newOrder = [...orderData,editOrder] \r\n            newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        }\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleRemoveOrder = (e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e)\r\n        orderData.splice(index, 1)\r\n        setOrderData([...orderData])\r\n        setTotalOrderPrice(generateTotal(orderData))\r\n    }\r\n\r\n    const handlePlusQty =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let editOrder = {...orderData[index],qty:orderData[index].qty+1}\r\n        // orderData.splice(index, 1,editOrder)\r\n\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleEditQty =(e)=>{\r\n\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n        // let newValue = orderData[index].newValue\r\n        let editOrder = {...orderData[index],qty:e.newValue}\r\n        // orderData.splice(index, 1,editOrder)\r\n\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n\r\n    const handleMinusQty =(e)=>{\r\n        let index = orderData.findIndex(ed=> ed._id===e._id)\r\n\r\n        let editOrder = {...orderData[index],qty:orderData[index].qty-1}\r\n        // orderData.splice(index, 1)\r\n        let newOrder = [...orderData.slice(0, index), editOrder,...orderData.slice(index + 1)]\r\n        setTotalOrderPrice(generateTotal(newOrder))\r\n        setOrderData(newOrder)\r\n    }\r\n\r\n    const handleCancelOrder =()=>{\r\n        form.resetFields()\r\n        setTotalOrderPrice(0)\r\n        setOrderData([])\r\n        message.warn(\"Order has cancelled!\")\r\n    }\r\n\r\n    const handlePrintInvoice =(e)=>{\r\n        setPrintData(e)\r\n        setOpenPrint(true)\r\n    }\r\n\r\n    const generateTotal =(data)=>{\r\n        let total = 0;\r\n        data?.map((e,index)=>{\r\n            total += e.price*e.qty\r\n        })\r\n        return total\r\n    }\r\n\r\n    const addOrder =async (e) =>{\r\n        try{\r\n            let {data}=await axios.post(API_LINK+'api/order', e)\r\n            if(data.success===true){\r\n                setSuccess(true)\r\n                form.resetFields()\r\n                setTotalOrderPrice(0)\r\n                setOrderData([])\r\n                message.success(\"Order has confirmed!\")\r\n            }else{\r\n                message.error(data.message)\r\n            }\r\n            \r\n        }catch(error){\r\n            message.error(error.message)    \r\n        }\r\n        \r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        let total = generateTotal(orderData)\r\n\r\n        if(orderData.length > 0){\r\n            // console.log({\r\n            //     ...values,\r\n            //     orderItems:orderData, \r\n            //     taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n            //     discount:values.discount > 0 ? values.discount :0,\r\n            //     totalPrice:total\r\n            // })\r\n            addOrder(\r\n                {\r\n                    ...values,\r\n                    orderItems:orderData, \r\n                    taxPrice:values.taxPrice > 0 ? values.taxPrice:0,\r\n                    discount:values.discount > 0 ? values.discount :0,\r\n                    totalPrice:total\r\n                }\r\n            );\r\n        }else{\r\n            message.warning(\"No order!\")\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    let totalSale = 0\r\n    let totalSaleToday = 0\r\n    if(dashboardData?.totalSale?.length>0 ){\r\n        totalSale = dashboardData?.totalSale[dashboardData?.totalSale?.length-1]?.total\r\n        totalSaleToday = dashboardData?.totalSaleToday?.length >0 ? dashboardData?.totalSaleToday[dashboardData?.totalSaleToday?.length-1]?.total:0\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        message.info('Click on left button.');\r\n        console.log('click left button', e);\r\n      }\r\n      \r\n      function handleMenuClick(e) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n      }\r\n\r\n    const menu = (\r\n        <Menu>\r\n          <Menu.Item onClick={()=> setOpenAddProduct(true)} key=\"1\">\r\n            <button\r\n                style={{width:'100%'}}\r\n                className=\"btn-grad\"\r\n            >\r\n                <PlusCircleOutlined /> NEW\r\n            </button>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" onClick={()=> setOpenEditProduct(true)}>\r\n            <Button\r\n                style={{width:'100%'}}\r\n                // className=\"btn-grad\"\r\n                \r\n            >\r\n                <EditOutlined /> EDIT\r\n            </Button>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" onClick={()=> setOpenAdjustStock(true)}>\r\n            <Button\r\n                style={{width:'100%'}}\r\n                // className=\"btn-grad\"\r\n                \r\n            >\r\n                <InboxOutlined /> Adjust Stock\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                width={800}\r\n                visible={openPrint}\r\n                footer={[\r\n                    // <Button\r\n                    //     key=\"1\"\r\n                    //     onClick={() => setOpenPrintInvoice(true)}\r\n                    // >\r\n                    //     បំពេញទិន្នន័យបន្ថែម\r\n                    // </Button>,\r\n                    <ReactToPrint\r\n                        key=\"2\"\r\n                        trigger={() => <button type=\"primary\" className=\"btn-grad\">PRINT INVOICE</button>}\r\n                        content={() => componentRef.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenPrint(false)}\r\n            >\r\n                <PrintInvoice \r\n                    ref={componentRef} \r\n                    printData={printData}\r\n                />\r\n            </Modal>\r\n\r\n            <AddProduct open={openAddProduct} setOpen={setOpenAddProduct} setSuccess={setSuccess} />\r\n            <EditProduct open={openEditProduct} setOpen={setOpenEditProduct} setSuccess={setSuccess} productList={menuData} />\r\n            <AdjustStock open={openAdjustStock} setOpen={setOpenAdjustStock} setSuccess={setSuccess} productList={menuData} />\r\n\r\n            <Row style={{margin:'0 auto'}}>\r\n                <Col xs={24} md={6} style={{padding:10}}>\r\n                    <Card\r\n                        className=\"card-menu\"\r\n                        style={{height:150}}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h3>TOTAL PRODUCT</h3>\r\n                                <div style={{fontSize:20}}>{dashboardData?.totalProduct >0  ? dashboardData?.totalProduct:0}</div>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n\r\n                                { saleShow !== \"salelist\"  ?\r\n                                    <button\r\n                                    className=\"btn-grad\"\r\n                                    onClick={()=> setSaleShow(\"salelist\")}\r\n                                    style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                    >\r\n                                        Sale List\r\n                                    </button>\r\n                                :null} \r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} md={6} style={{padding:10}}>\r\n                    <Card\r\n                         className=\"card-menu\"\r\n                         style={{height:150}}\r\n                    >\r\n                        <Row >\r\n                            <Col xs={12}>\r\n                                <h3>TOTAL SALE</h3>\r\n                                {/* <div style={{fontSize:20}}>{currencyFormat(totalSale)}</div> */}\r\n                                <div style={{fontSize:20}}>{numberWithCommas(totalSale * rielAsOne)} &#6107;</div>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                { saleShow!== \"orderlist\" ?\r\n                                <button\r\n                                className=\"btn-grad\"\r\n                                onClick={()=> setSaleShow(\"orderlist\")}\r\n                                style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                >\r\n                                    Order List\r\n                                </button>\r\n                                :null}\r\n                                {/* <br/><br/> */}\r\n                                {/* <h3>Today: {currencyFormat(totalSaleToday)}</h3> */}\r\n                                <h3>Today <br/> {numberWithCommas(totalSaleToday * rielAsOne)} &#6107;</h3>\r\n\r\n                                {/* { saleShow === false ?\r\n                                <Button\r\n                                // className=\"card-menu\"\r\n                                onClick={()=> setSaleShow(true)}\r\n                                style={{width:'100%',backgroundColor:'#ff8b8c',color:\"#FFFFFF\"}}\r\n                                >\r\n                                    Sale List\r\n                                </Button>\r\n                                :null} */}\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} md={12} >\r\n                    <Row>\r\n                        <Col xs={24} md={8} style={{padding:10}}>\r\n                        \r\n                            <Button\r\n                            className=\"card-menu\"\r\n                            onClick={()=> setSaleShow(\"\")}\r\n                            style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                            >\r\n                                <h3 style={{color:'#FFFFFF'}}>NEW ORDER</h3>\r\n                                <div style={{fontSize:38}}><PlusCircleOutlined /></div>\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={8} style={{padding:10}}>\r\n                            <Button\r\n                            className=\"card-menu\"\r\n                            onClick={()=> setSaleShow(\"purchase\")}\r\n                            style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                            >\r\n                                <h3 style={{color:'#FFFFFF'}}>PURCHASE</h3>\r\n                                <div style={{fontSize:38}}><ImportOutlined /></div>\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col xs={24} md={8} style={{padding:10}}>\r\n                            <Button\r\n                            className=\"card-menu\"\r\n                            onClick={()=> setSaleShow(\"stock\")}\r\n                            style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                            >\r\n                                <h3 style={{color:'#FFFFFF'}}>STOCK</h3>\r\n                                <div style={{fontSize:38}}><InboxOutlined /></div>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* <Button\r\n                     className=\"card-menu\"\r\n                     onClick={()=> setSaleShow(\"\")}\r\n                     style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                    >\r\n                        <h3 style={{color:'#FFFFFF'}}>NEW ORDER</h3>\r\n                        <div style={{fontSize:38}}><PlusCircleOutlined /></div>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n                {/* <Col xs={24} md={6} style={{padding:10}}>\r\n                    <Button\r\n                     className=\"card-menu\"\r\n                     onClick={()=> setSaleShow(\"purchase\")}\r\n                     style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                    >\r\n                        <h3 style={{color:'#FFFFFF'}}>PURCHASE</h3>\r\n                        <div style={{fontSize:38}}><ImportOutlined /></div>\r\n                    </Button>\r\n                </Col>\r\n\r\n                <Col xs={24} md={6} style={{padding:10}}>\r\n                    <Button\r\n                     className=\"card-menu\"\r\n                     onClick={()=> setSaleShow(\"stock\")}\r\n                     style={{width:'100%',height:150,backgroundColor:'#ff8b8c', color:'#FFFFFF'}}\r\n                    >\r\n                        <h3 style={{color:'#FFFFFF'}}>STOCK</h3>\r\n                        <div style={{fontSize:38}}><InboxOutlined /></div>\r\n                    </Button>\r\n                </Col> */}\r\n\r\n            </Row>\r\n            <br/><br/>\r\n            { saleShow ===\"\" ? \r\n            <Row >\r\n                <Col xs={24} md={12} style={{backgroundColor:'#F7F9FC',padding:10}}>\r\n                <Form\r\n                    form={form}\r\n                    name=\"addOrder\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Row>\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"invoiceID\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"#INVOICE\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"client\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"customer\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={12} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"shippingAddress\"\r\n                                rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"address\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={3} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"taxPrice\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"tax %\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        {/* <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"shippingPrice\"\r\n                                // rules={[{ required: true, message: 'Field is required!' }]} \r\n                            >\r\n                                <Input type=\"number\" placeholder=\"shipping $\" />\r\n                            </Form.Item>\r\n                        </Col> */}\r\n                        <Col xs={3} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"discount\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input type=\"number\" placeholder=\"dis %\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"deliveredBy\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"deliver by\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"clientTel\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"tel\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={6} style={{padding:5}}>\r\n                            <Form.Item\r\n                                name=\"remark\"\r\n                                \r\n                                // rules={[{ required: true, message: 'Field is required!' }]}\r\n                            >\r\n                                <Input placeholder=\"remark\" />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    style={{width:'100%'}}\r\n                                    // onClick={()=> setOpenAddProduct(true)}\r\n                                    htmlType=\"submit\"\r\n                                    className=\"btn-grad\"\r\n                                >\r\n                                    CONFIRM\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col xs={4} style={{padding:5}}>\r\n                            <Form.Item>\r\n                                <Button\r\n                                    // style={{backgroundColor:'#ff8b8c' ,color:'#FFFFFF'}}\r\n                                    onClick={()=> handleCancelOrder()}\r\n                                    style={{width:'100%'}}\r\n                                    type=\"danger\"\r\n                                    disabled={orderData?.length<=0}\r\n                                >\r\n                                    CANCEL\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Form>\r\n\r\n                    <Table \r\n                        columns={orderColumn({handleRemoveOrder, handlePlusQty,handleMinusQty,handleEditQty})} \r\n                        dataSource={orderData} \r\n                        pagination={false}\r\n                    />\r\n                    <h2 style={{textAlign:'right'}}>Total Price: {currencyFormat(totalOrderPrice)}</h2>\r\n                    <h2 style={{textAlign:'right'}}>Riel: {numberWithCommas(totalOrderPrice * rielAsOne )} &#6107;</h2>\r\n                </Col>\r\n\r\n                <Col xs={24} md={12} style={{backgroundColor:'#F7F9FC'}}>\r\n                    <Row>\r\n                        <Col xs={24} md={24}>\r\n                            <Row>\r\n                            <Col xs={20} style={{padding:10}}>\r\n                                <Input onChange={(e)=>handleSearchItem(e.target.value)} placeholder=\"Search for...\" />\r\n                            </Col>\r\n                            <Col xs={2} style={{padding:10}}>\r\n                                {/* <button\r\n                                    style={{width:'100%'}}\r\n                                    className=\"btn-grad\"\r\n                                    onClick={()=> setOpenAddProduct(true)}\r\n                                >\r\n                                    <PlusCircleOutlined /> NEW\r\n                                </button> */}\r\n\r\n                                <Dropdown.Button style={{width:'100%'}} overlay={menu}>\r\n                                    {/* Dropdown */}\r\n                                </Dropdown.Button>\r\n                            </Col>\r\n\r\n                            {/* <Col xs={6} style={{padding:10}}>\r\n                                <Button\r\n                                    style={{width:'100%'}}\r\n                                    // className=\"btn-grad\"\r\n                                    onClick={()=> setOpenEditProduct(true)}\r\n                                >\r\n                                    <EditOutlined /> EDIT\r\n                                </Button>\r\n                            </Col> */}\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        <Col xs={24}>\r\n                            <Row style={{maxHeight:500,overflowY:'scroll',width:'100%'}} >\r\n                            { \r\n\r\n                                itemData?.map((e,index)=>{\r\n                                    return (\r\n                                        <MenuItem item={e} handleClick={handleAddOrder} />\r\n                                    )   \r\n                                })\r\n                            }\r\n                        \r\n                            </Row>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                    {/* <Card\r\n                        hoverable\r\n                        style={{ width: 100,height:100 }}\r\n                        // cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n            : null }\r\n\r\n            {\r\n            saleShow===\"orderlist\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <OrderList handlePrintInvoice={handlePrintInvoice} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n\r\n            {\r\n            saleShow===\"salelist\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <SaleList handlePrintInvoice={handlePrintInvoice} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n\r\n            {\r\n            saleShow===\"purchase\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <Purchase productData={menuData} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n\r\n            {\r\n            saleShow===\"stock\" ?\r\n            <Row>\r\n                <Col xs={24} style={{padding:10}}>\r\n                    <Stock productData={menuData} />\r\n                </Col>\r\n            </Row>\r\n            :null}\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport {Button} from 'antd'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  // Link\n} from \"react-router-dom\";\nimport MenuPage from './component/menu/Menu';\nimport { Helmet } from 'react-helmet';\n\nfunction App() {\n  return (\n    \n    <>\n      <Helmet>\n          <title>MINI POS</title>\n      </Helmet>\n\n      <Router>\n          <Switch>\n              <Route path=\"/\">\n                <MenuPage />\n              </Route>\n          </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  // <h1>Testindex</h1>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}