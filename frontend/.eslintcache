[{"C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\components\\eBookComponents\\TootipProfile.js":"1","C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\screens\\eBookScreens\\EbookCourseScreen.jsx":"2","C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\screens\\adminEbooks\\AddminDetailScreen.js":"3"},{"size":1015,"mtime":1626082580862,"results":"4","hashOfConfig":"5"},{"size":6524,"mtime":1626083160087,"results":"6","hashOfConfig":"5"},{"size":7028,"mtime":1626083180743,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15emxbt",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\components\\eBookComponents\\TootipProfile.js",["15","16","17"],"C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\screens\\eBookScreens\\EbookCourseScreen.jsx",["18","19"],"C:\\Users\\jrnn21\\Desktop\\jrnn21\\UpdatedProject\\frontend\\src\\screens\\adminEbooks\\AddminDetailScreen.js",["20"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactHtmlParser from 'html-react-parser';\r\nimport './DetailScreen.css';\r\nimport CodeEditor from '../../components/eBookComponents/CodeEditor';\r\nimport {\r\n getDetailByContentId,\r\n deleteDetail,\r\n addDetail,\r\n updateDetail,\r\n} from '../../actions/eBookActions/eBookDetailActions';\r\nimport Editor from '@monaco-editor/react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\nimport { SiOneplus } from 'react-icons/si';\r\n\r\nconst AddminDetailScreen = () => {\r\n const dispatch = useDispatch();\r\n const { id } = useParams();\r\n const [contents, setContents] = useState('');\r\n const [squery, setSquery] = useState('');\r\n const [detailId, setDetailId] = useState('');\r\n const [openEditor, setOpenEditor] = useState(false);\r\n const [code, setCode] = useState({ codeShow: '', codeLive: '' });\r\n const [h, setH] = useState('100px');\r\n const [codeLiveText, setCodeLiveText] = useState('');\r\n\r\n const { detailBycontents } = useSelector((state) => state.detailByContentId);\r\n const detailDelete = useSelector((state) => state.detailDelete);\r\n const detailCreate = useSelector((state) => state.detailCreate);\r\n const detailUpdate = useSelector((state) => state.detailUpdate);\r\n const handleSubmit = () => {\r\n  if (squery === 'add' || '') {\r\n   dispatch(addDetail(contents, id, codeLiveText, code.codeShow, h));\r\n  } else {\r\n   dispatch(updateDetail(contents, detailId, codeLiveText, code.codeShow, h));\r\n  }\r\n\r\n  setContents('');\r\n };\r\n\r\n useEffect(() => {\r\n  dispatch(getDetailByContentId(id));\r\n }, [dispatch, detailDelete, detailCreate, detailUpdate, id]);\r\n\r\n const openEditorHandler = () => {\r\n  setOpenEditor(!openEditor);\r\n };\r\n return (\r\n  <div className=\"details mt-2\" style={{ maxWidth: '1200px' }}>\r\n   <p\r\n    className=\"kh px-2 py-1 rounded text-light bg-success d-inline-block sticky-top\"\r\n    style={{ top: 80, cursor: 'pointer' }}\r\n    onClick={() => {\r\n     setSquery('add');\r\n     setOpenEditor(true);\r\n    }}\r\n   >\r\n    <SiOneplus className=\"mb-1\" />\r\n    <span className=\"font-weight-bold\"> បង្កើត</span>\r\n   </p>\r\n\r\n   <div\r\n    className={`w-100 shadow-lg p-1 mt-2 bg-light rounded ${\r\n     squery === 'update' || squery === 'add' ? 'd-block' : 'd-none'\r\n    }`}\r\n    style={{ marginBottom: '48vh' }}\r\n   >\r\n    <div className=\"w-100 p-2\">\r\n     {ReactHtmlParser(contents)}\r\n     {code.codeShow ? (\r\n      <div\r\n       className=\"px-4 pt-2 rounded\"\r\n       style={{\r\n        background: 'rgb(38,50,56)',\r\n        zIndex: 1,\r\n       }}\r\n      >\r\n       <ControlledEditor\r\n        value={code.codeShow}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n         lineWrapping: true,\r\n         lint: true,\r\n         mode: 'xml',\r\n         theme: 'material',\r\n         //  lineNumbers: true,\r\n        }}\r\n       />\r\n      </div>\r\n     ) : null}\r\n     {code.codeLive && code.codeLive !== 'a' ? (\r\n      <div className=\"mt-2\">\r\n       <button\r\n        className=\"btn btn-info kh text-dark rounded\"\r\n        onClick={() => {\r\n         const win = window.open('/elearning', '_blank');\r\n         win.focus();\r\n        }}\r\n       >\r\n        ចាប់ផ្ដើមអនុវត្ដ\r\n       </button>\r\n      </div>\r\n     ) : null}\r\n    </div>\r\n   </div>\r\n   <div\r\n    className={`w-100 ${\r\n     squery === 'update' || squery === 'add' ? 'd-none' : 'd-block'\r\n    }`}\r\n    style={{ marginBottom: '48vh' }}\r\n   >\r\n    <div className=\"w-100 m-0 p-0\">\r\n     {detailBycontents &&\r\n      detailBycontents.details &&\r\n      detailBycontents.details.map((detail) => (\r\n       <div\r\n        className=\"shadow-lg p-1 mt-2 bg-light rounded w-100\"\r\n        key={detail._id}\r\n       >\r\n        <div className=\"w-100 p-2\">\r\n         {ReactHtmlParser(detail.contents)}\r\n         {detail.codeShow ? (\r\n          <div\r\n           className=\"px-4 pt-2 rounded\"\r\n           style={{\r\n            background: 'rgb(38,50,56)',\r\n            zIndex: 1,\r\n           }}\r\n          >\r\n           <ControlledEditor\r\n            value={detail.codeShow}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n             lineWrapping: true,\r\n             lint: true,\r\n             mode: 'xml',\r\n             theme: 'material',\r\n             //  lineNumbers: true,\r\n            }}\r\n           />\r\n          </div>\r\n         ) : null}\r\n         {detail.codeLive && detail.codeLive !== 'a' ? (\r\n          <div className=\"mt-2\">\r\n           <button\r\n            className=\"btn btn-info kh text-dark rounded\"\r\n            onClick={() => {\r\n             const win = window.open('/elearning', '_blank');\r\n             win.focus();\r\n            }}\r\n           >\r\n            ចាប់ផ្ដើមអនុវត្ដ\r\n           </button>\r\n          </div>\r\n         ) : null}\r\n        </div>\r\n        <div className=\"event text-center\">\r\n         <FiEdit3\r\n          className=\"m-2\"\r\n          style={{ fontSize: '20px', cursor: 'pointer' }}\r\n          onClick={() => {\r\n           setContents(detail.contents);\r\n           setDetailId(detail._id);\r\n           setCode({\r\n            ...code,\r\n            codeShow: detail.codeShow,\r\n            codeLive: detail.codeLive,\r\n           });\r\n           setH(detail.h);\r\n           setSquery('update');\r\n           setOpenEditor(true);\r\n           window.scroll(0, 0);\r\n          }}\r\n         />\r\n         <AiOutlineDelete\r\n          className=\"m-2\"\r\n          style={{ fontSize: '20px', cursor: 'pointer' }}\r\n          onClick={() => {\r\n           if (window.confirm('Delete?')) {\r\n            dispatch(deleteDetail(detail._id));\r\n           }\r\n           setSquery('');\r\n           setContents('');\r\n          }}\r\n         />\r\n        </div>\r\n       </div>\r\n      ))}\r\n    </div>\r\n   </div>\r\n\r\n   <div\r\n    className=\"position-fixed\"\r\n    style={{\r\n     margin: '0 auto',\r\n     zIndex: 10,\r\n     transition: '0.2s',\r\n     width: 1110,\r\n     bottom: `${openEditor ? '0px' : '-315px'}`,\r\n    }}\r\n   >\r\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n     <button\r\n      type=\"button\"\r\n      className=\"btn btn-dark rounded-top\"\r\n      onClick={openEditorHandler}\r\n     >\r\n      Show\r\n     </button>\r\n    </div>\r\n    <div>\r\n     <CodeEditor\r\n      contents={contents}\r\n      setContents={setContents}\r\n      code={code}\r\n      setCode={setCode}\r\n      squery={squery}\r\n      setSquery={setSquery}\r\n      setOpenEditor={setOpenEditor}\r\n      h={h}\r\n      setH={setH}\r\n      handleSubmit={handleSubmit}\r\n      codeLiveText={codeLiveText}\r\n      setCodeLiveText={setCodeLiveText}\r\n     />\r\n    </div>\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nexport default AddminDetailScreen;\r\n",{"ruleId":"21","severity":1,"message":"22","line":2,"column":22,"nodeType":"23","messageId":"24","endLine":2,"endColumn":32},{"ruleId":"21","severity":1,"message":"25","line":3,"column":8,"nodeType":"23","messageId":"24","endLine":3,"endColumn":14},{"ruleId":"21","severity":1,"message":"26","line":5,"column":8,"nodeType":"23","messageId":"24","endLine":5,"endColumn":18},{"ruleId":"27","severity":1,"message":"28","line":37,"column":5,"nodeType":"29","endLine":37,"endColumn":15,"suggestions":"30"},{"ruleId":"27","severity":1,"message":"31","line":41,"column":5,"nodeType":"29","endLine":41,"endColumn":15,"suggestions":"32"},{"ruleId":"21","severity":1,"message":"33","line":13,"column":8,"nodeType":"23","messageId":"24","endLine":13,"endColumn":14},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'course.length' and 'param.lang'. Either include them or remove the dependency array.","ArrayExpression",["34"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["35"],"'Editor' is defined but never used.",{"desc":"36","fix":"37"},{"desc":"38","fix":"39"},"Update the dependencies array to be: [course.length, dispatch, param.lang]",{"range":"40","text":"41"},"Update the dependencies array to be: [dispatch, param.id]",{"range":"42","text":"43"},[1547,1557],"[course.length, dispatch, param.lang]",[1632,1642],"[dispatch, param.id]"]